# source("/Users/mlandis/projects/rb_lagrange/code/n3_dec.Rev")

# presence-absence to state conversion
# 1  000
# 2  001
# 3  010
# 4  011
# 5  100
# 6  101
# 7  110
# 8  111


# per-area extinction rates
# ... for area i
for (i in 1:3) {
    extirpation_rate[i] ~ dnExp(10.)
    mv[mvi++] = mvScale(extirpation_rate[i])
}

# between-area dispersal rates
for (i in 1:3) { 							# ... from area i
    for (j in 1:3) {    					# ... to area j 
        if (i != j) {       				# ... ignoring self-dispersal events
            dispersal_rate[i][j] ~ dnExp(10.)
            mv[mvi++] = mvScale(dispersal_rate[i][j])
        }
    }
}

# initalize rates to 0.
for (i in 1:8) {
    for (j in 1:8) {
        r[i][j] <- 0.
    }
}

# Assign local extinction (extirpation) rates to `r`.
r[4][2] := extirpation_rate[2]   # 011 -> 001 : Extirpate in area 2
r[4][3] := extirpation_rate[3]   # 011 -> 010 : Extirpate in area 3
r[6][2] := extirpation_rate[1]   # 101 -> 001 : Extirpate in area 1
r[6][5] := extirpation_rate[3]   # 101 -> 100 : Extirpate in area 3
r[7][3] := extirpation_rate[1]   # 110 -> 010 : Extirpate in area 1
r[7][5] := extirpation_rate[2]   # 110 -> 100 : Extirpate in area 2
r[8][4] := extirpation_rate[1]   # 111 -> 011 : Extirpate in area 1
r[8][6] := extirpation_rate[2]   # 111 -> 101 : Extirpate in area 2
r[8][7] := extirpation_rate[3]   # 111 -> 110 : Extirpate in area 3

# Assign dispersal rates to `r`.
r[2][4] := dispersal_rate[3][2]                         # 001 -> 011 : Disperse from area 3 to 2
r[2][6] := dispersal_rate[3][1]                         # 001 -> 101 : Disperse from area 3 to 1
r[3][4] := dispersal_rate[2][3]                         # 010 -> 011 : Disperse from area 2 to 3
r[3][7] := dispersal_rate[2][1]                         # 010 -> 110 : Disperse from area 2 to 1
r[5][6] := dispersal_rate[1][3]                         # 100 -> 101 : Disperse from area 1 to 3
r[5][7] := dispersal_rate[1][2]                         # 100 -> 110 : Disperse from area 1 to 2
r[4][8] := dispersal_rate[2][1] + dispersal_rate[3][1]  # 011 -> 111 : Disperse from area 2 to 1
                                                        #                   and from area 3 to 1
r[6][8] := dispersal_rate[1][2] + dispersal_rate[3][2]  # 101 -> 111 : Disperse from area 1 to 2
                                                        #                   and from area 3 to 2
r[7][8] := dispersal_rate[1][3] + dispersal_rate[2][3]  # 110 -> 111 : Disperse from area 1 to 3
                                                        #                   and from area 2 to 3
                        
# Show the contents of `r`.
r

# Does this look as expected? What patterns do you see?
# What series of events might occur to get from state 5 (100) to state 2 (001)?
# Come up with three examples.
# Given the rates, which scenario do you think is most likely?

# Convert the rates, `r`, from RealPos[][] into a Simplex (i.e. RealPos[]).
k <- 1
for (i in 1:8) {
    for (j in 1:8) {
        if (i != j) {
            er_nat[k] := r[i][j]
            k += 1
        }
    }
}

er := simplex(er_nat)
bf <- simplex(rep(1,8))
q := fnFreeK(er, bf)

# create the cladogenesis transition probability matrix
allopatry_weight <- 0.5
sympatry_weight <- 0.5
clado_type_prob ~ dnDirichlet( simplex(allopatry_weight, sympatry_weight) )
mv[mvi++] = mvSimplex(clado_type_prob, alpha=10., numCats=2, offset=1.0)

# for easy monitoring
allopatry_prob := clado_type_prob[1]
sympatry_prob := clado_type_prob[2]

b <- simplex(1,1)
clado_prob := fnCladoProbs(clado_type_prob, b, n_areas, 2)

