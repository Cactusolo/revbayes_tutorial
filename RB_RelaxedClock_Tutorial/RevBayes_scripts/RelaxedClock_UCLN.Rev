################################################################################
#
# RevBayes Example: Bayesian inference of phylogeny using a general time reversible (GTR)
#                   substitution model with gamma distributed rate variation among sites
#                   and a uncorrelated lognormal (UCLN) relaxed local clock. 
#                   The tree prior is a constant-rate birth-death process
#                   with several node calibrations.
#
# authors: Sebastian Hoehna
#
################################################################################

#######################
# Reading in the Data #
#######################

###### This just defines a single model for all sites #######

### Read in sequence data for both genes

data <- readDiscreteCharacterData("data/primates_cytb.nex")

# Get some useful variables from the data. We need these later on.
n_species <- data.ntaxa()
names <- data.names()
n_branches <- 2*n_species - 2

# set my move index
mi = 0



######################
# Substitution Model #
######################

#### specify the GTR+G substitution model applied uniformly to all sites ###
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
moves[++mi] = mvSimplexElementScale(er,weight=3)


pi_prior <- v(1,1,1,1) 
pi ~ dnDirichlet(pi_prior)
moves[++mi] = mvSimplexElementScale(pi,weight=2)


#### create a deterministic variable for the rate matrix ####
Q := fnGTR(er,pi) 


#############################
# Among Site Rate Variation #
#############################

alpha_prior <- 0.05
alpha ~ dnExponential( alpha_prior )
gamma_rates := fnDiscretizeGamma( alpha, alpha, 4, false )

# add moves for the stationary frequencies, exchangeability rates and the shape parameter
moves[++mi] = mvScale(alpha,weight=2)




##############
# Tree model #
##############

# Specify a prior on the diversification and turnover rate
diversification ~ dnGamma(5,1)
turnover ~ dnGamma(5,1)

# now transform the diversification and turnover rates into speciation and extinction rates
speciation := diversification + turnover
extinction := turnover

# specify a prior on the root age (our informed guess is about 75-80 mya)
root ~ dnNormal(90.0,6.0)

sampling_fraction <- n_species / 450 # 23 out of the ~ 450 primate species

# create some moves that change the stochastic variables
# all moves are sliding proposals but you could use scaling proposals for the rates too
moves[++mi] = mvSlide(diversification,delta=1,tune=true,weight=1)
moves[++mi] = mvSlide(turnover,delta=1,tune=true,weight=1)
moves[++mi] = mvSlide(root,delta=1,tune=true,weight=1)

clade_galago_loris = clade("Galago_senegalensis", "Loris_tardigradus", "Nycticebus_coucang", "Otolemur_crassicaudatus", "Perodicticus_potto", age=40)
clade_catarrhini = clade("Chlorocebus_aethiops", "Colobus_guereza", "Hylobates_lar", "Macaca_mulatta", "Pan_paniscus", "Saimiri_sciureus", age=29)
clade_platyrrhini = clade("Alouatta_palliata", "Aotus_trivirgatus", "Callicebus_donacophilus", "Cebus_albifrons", age=23.5)
clade_simiiformes = clade("Chlorocebus_aethiops", "Colobus_guereza", "Hylobates_lar", "Macaca_mulatta", "Pan_paniscus", "Saimiri_sciureus", "Alouatta_palliata", "Aotus_trivirgatus", "Callicebus_donacophilus", "Cebus_albifrons", age=43)


# construct a variable for the tree drawn from a birth death process
psi ~ dnBDP(lambda=speciation, mu=extinction, rootAge=abs(root), rho=sampling_fraction, nTaxa=n_species, names=names, constraints=v(clade_galago_loris, clade_catarrhini, clade_platyrrhini, clade_simiiformes) )


moves[++mi] = mvNarrow(psi, weight=5.0)
moves[++mi] = mvNNI(psi, weight=1.0)
moves[++mi] = mvFNPR(psi, weight=3.0)
moves[++mi] = mvSubtreeScale(psi, weight=3.0)
moves[++mi] = mvNodeTimeSlideUniform(psi, weight=15.0)


#####################
# Node calibrations #
#####################

# here we use simply a normal distribution to calibrate the simiiformes clade
age_simiiformes := tmrca(psi, clade_simiiformes)
fossil_simiiformes ~ dnNormal(age_simiiformes, 4.5)
fossil_simiiformes.clamp( 43 )

# e.g., we could use an exponential distribution as well
#age_simiiformes := tmrca(psi, clade_simiiformes)
#fossil_simiiformes ~ dnExponential(1.0, offset = -age_simiiformes)
#fossil_simiiformes.clamp( -43 )

########
# UCLN #
########

NUM_RATE_CATEGORIES = 10

ucln_mean ~ dnUnif(1E-10, 100)
ucln_log_mean := ln( ucln_mean )
ucln_sigma ~ dnExponential(1.0)

#moves[++mi] = mvSlide(ucln_log_mean, delta=0.5, weight=5.0)
moves[++mi] = mvScale(ucln_mean, lambda=0.5, weight=5.0)
moves[++mi] = mvScale(ucln_sigma, lambda=0.5, weight=5.0)

# use a discretized lognormal
rate_categories := fnDiscretizeDistribution(dnLnorm(ucln_log_mean, ucln_sigma), NUM_RATE_CATEGORIES)
rate_probs <- simplex(rep(1, NUM_RATE_CATEGORIES))
for (j in 1:n_branches) {
    # for each branch pull from one of the rate categories
    branch_rates[j] ~ dnMixture(rate_categories, rate_probs)
    moves[++mi] = mvMixtureAllocation(branch_rates[j], weight=2.0)
}

mean_rt := mean(branch_rates)


up_down_scale = mvUpDownScale( weight=5 )
up_down_scale.addVariable( psi, TRUE )
up_down_scale.addVariable( root, TRUE )
up_down_scale.addVariable( ucln_mean, FALSE )

moves[++mi] = up_down_scale

###################
# PhyloCTMC Model #
###################

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=psi, Q=Q, branchRates=branch_rates, siteRates=gamma_rates, type="DNA")

# attach the data
seq.clamp(data)




#############
# THE Model #
#############

# We define our model.
# We can use any node of our model as a handle, here we chose to use the rate matrix.
mymodel = model(Q)



monitors[1] = mnScreen(printgen=1000, ucln_log_mean, mean_rt, root, age_simiiformes)
monitors[2] = mnModel(filename="output/primates_cytb_UCLN.log",printgen=10, separator = TAB)

# we can use the extended tree monitor instead
monitors[3] = mnExtNewick(filename="output/primates_cytb_UCLN.trees", isNodeParameter=TRUE, printgen=10, separator = TAB, tree=psi, branch_rates)




mymcmc = mcmc(mymodel, monitors, moves)

mymcmc.burnin(generations=10000,tuningInterval=250)
mymcmc.run(generations=30000)

mymcmc.operatorSummary()



# Now, we will analyze the tree output.
# Let us start by reading in the tree trace
treetrace = readTreeTrace("output/primates_cytb_UCLN.trees", treetype="clock")

map_tree = mapTree(treetrace,"output/primates_cytb_UCLN.tree")

# you may want to quit RevBayes now
q()

