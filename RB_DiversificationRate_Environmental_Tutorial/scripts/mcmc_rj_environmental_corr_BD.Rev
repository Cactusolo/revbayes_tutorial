################################################################################
#
# RevBayes Example: Bayesian inference of diversification rates under 
#                   environmentally correlated rates birth-death model
# 
#
# authors: Sebastian Hoehna
#
################################################################################

#######################
# Reading in the Data #
#######################

### Read in the "observed" tree
T <- readTrees("data/primates_Springer.tre")[1]

# Get some useful variables from the data. We need these later on.
taxa <- T.taxa()

# set my move index
mvi = 0
mni = 0


#################################
# Set up the environmental data #
#################################

co2 <- v(297.6, 301.36, 304.84, 307.86, 310.36, 312.53, 314.48, 316.31, 317.42, 317.63, 317.74, 318.51, 318.29, 316.5, 315.49, 317.64, 318.61, 316.6, 317.77, 328.27, 351.12, 381.87, 415.47, 446.86, 478.31, 513.77, 550.74, 586.68, 631.48, 684.13, 725.83, 757.81, 789.39, 813.79, 824.25, 812.6, 784.79, 755.25, 738.41, 727.53, 710.48, 693.55, 683.04, 683.99, 690.93, 694.44, 701.62, 718.05, 731.95, 731.56, 717.76)
#temperature <- v(3.893, 3.708, 3.532, 3.368, 3.214, 3.070, 2.935, 2.811, 2.700, 2.594, 2.488, 2.385, 2.297, 2.224, 2.159, 2.104, 2.063, 2.045, 2.048, 2.053, 2.060, 2.078, 2.102, 2.132, 2.168, 2.202, 2.262, 2.351, 2.429, 2.458, 2.439, 2.398, 2.335, 2.216, 2.051, 1.902, 1.761, 1.602, 1.461, 1.357, 1.266, 1.162, 1.046, 0.929, 0.803, 0.670, 0.533, 0.389, 0.235, 0.074, -0.094)
MAX_VAR_AGE = 50
var <- co2
#var <- (co2 - mean(co2))
#var <- (co2 - mean(co2))/(sqrt(sum((co2 - mean(co2))^2) / (co2.size() - 1)))

NUM_INTERVALS = var.size()


####################
# Create the rates #
####################

# first we create the standard deviation of the rates between intervals
# draw the sd from an exponential distribution
speciation_sd ~ dnExponential(1.0)
moves[++mvi] = mvScale(speciation_sd,weight=5.0)

extinction_sd ~ dnExponential(1.0)
moves[++mvi] = mvScale(extinction_sd,weight=5.0)


alpha_speciation ~ dnUniform(-100,100)
alpha_extinction ~ dnUniform(-100,100)
#beta_speciation ~ dnNormal(0,1.0)
#beta_extinction ~ dnNormal(0,1.0)
beta_speciation ~ dnReversibleJumpMixture(constantValue=0.0, baseDistribution=dnNormal(0,1.0), p=0.5)
beta_extinction ~ dnReversibleJumpMixture(constantValue=0.0, baseDistribution=dnNormal(0,1.0), p=0.5)

alpha_speciation.setValue( 0.0 )
alpha_extinction.setValue( 0.0 )
beta_speciation.setValue( 0.0 )
beta_extinction.setValue( 0.0 )

moves[++mvi] = mvSlide(alpha_speciation,delta=1.0,weight=10.0)
moves[++mvi] = mvSlide(alpha_extinction,delta=1.0,weight=10.0)
moves[++mvi] = mvSlide(beta_speciation,delta=1.0,weight=10.0)
moves[++mvi] = mvSlide(beta_extinction,delta=1.0,weight=10.0)
moves[++mvi] = mvRJSwitch(beta_speciation, weight=5)
moves[++mvi] = mvRJSwitch(beta_extinction, weight=5)

speciation_corr_prob := ifelse(beta_speciation == 0.0, 0, 1)
extinction_corr_prob := ifelse(beta_extinction == 0.0, 0, 1)

for (i in 1:NUM_INTERVALS) {
   
   speciation_residual[i] ~ dnNormal(0.0, speciation_sd)
   extinction_residual[i] ~ dnNormal(0.0, extinction_sd)

   log_speciation[i] := alpha_speciation + beta_speciation * var[i] + speciation_residual[i]
   log_extinction[i] := alpha_extinction + beta_extinction * var[i] + extinction_residual[i]
   
   speciation[i] := exp( log_speciation[i] )
   extinction[i] := exp( log_extinction[i] )

   moves[++mvi] = mvSlide(speciation_residual[i],delta=1.0,weight=2.0)
   moves[++mvi] = mvSlide(extinction_residual[i],delta=1.0,weight=2.0)
   
}


interval_times <- MAX_VAR_AGE * (1:(NUM_INTERVALS-1)) / (NUM_INTERVALS-1)


moves[++mvi] = mvVectorSlide(speciation_residual, weight=10)
moves[++mvi] = mvVectorSlide(extinction_residual, weight=10)

moves[++mvi] = mvShrinkExpand( speciation_residual, sd=speciation_sd, weight=10 )
moves[++mvi] = mvShrinkExpand( extinction_residual, sd=extinction_sd, weight=10 )


#up_down_slide_speciation = mvUpDownSlide(weight=2)
#up_down_slide_speciation.addVariable( speciation_residual, up=TRUE )
#up_down_slide_speciation.addVariable( alpha_speciation, up=FALSE )
#moves[++mvi] = up_down_slide_speciation
#
#up_down_slide_extinction = mvUpDownSlide(weight=2)
#up_down_slide_extinction.addVariable( extinction_residual, up=TRUE )
#up_down_slide_extinction.addVariable( alpha_extinction, up=FALSE )
#moves[++mvi] = up_down_slide_extinction


### rho is the probability of sampling species at the present
### fix this to 23/377, since there are ~377 described species of primates
### and we have sampled 23
rho <- T.ntips()/377

timetree ~ dnEpisodicBirthDeath(rootAge=T.rootAge(), lambdaRates=speciation, lambdaTimes=interval_times, muRates=extinction, muTimes=interval_times, rho=rho, samplingStrategy="uniform", condition="survival", taxa=taxa)

### clamp the model with the "observed" tree
timetree.clamp(T)



#############
# The Model #
#############


### workspace model wrapper ###
mymodel = model(rho)

### set up the monitors that will output parameter values to file and screen 
monitors[++mni] = mnModel(filename="output/primates_co2_rj.log",printgen=10, separator = TAB)
monitors[++mni] = mnFile(filename="output/primates_co2_rj_speciation_rates.log",printgen=10, separator = TAB, speciation)
monitors[++mni] = mnFile(filename="output/primates_co2_rj_speciation_times.log",printgen=10, separator = TAB, interval_times)#
monitors[++mni] = mnFile(filename="output/primates_co2_rj_extinction_rates.log",printgen=10, separator = TAB, extinction)
monitors[++mni] = mnFile(filename="output/primates_co2_rj_extinction_times.log",printgen=10, separator = TAB, interval_times)
monitors[++mni] = mnScreen(printgen=1000, speciation_corr_prob, extinction_corr_prob)



################
# The Analysis #
################

### workspace mcmc ###
mymcmc = mcmc(mymodel, monitors, moves)

### pre-burnin to tune the proposals ###
mymcmc.burnin(generations=5000,tuningInterval=100)

### run the MCMC ###
mymcmc.run(generations=50000)

mymcmc.operatorSummary()

## quit ##
q()