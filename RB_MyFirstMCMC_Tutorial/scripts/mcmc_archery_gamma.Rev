##################################################
# Basic MCMC tutorial using archery example      #
#    Wade Dismukes, Tracy Heath, and Walker Pett #
##################################################



# Simulate some data (i.e. shoot some arrows)
# First we need some prior on our mean and variance
num_arrows = 60 # number of arrows shot
# true mean arrow distance from target
mean_true = 1
# true variance 
var_true = 1

# true gamma distribution shape and rate parameters
rate_true = mean_true / var_true
shape_true = mean_true * rate_true

# simulate some data
arrows = rgamma(n=num_arrows, shape=shape_true, rate=rate_true)

# define the prior function on the mean 
function prior(mean, var){
	if(mean < 0.0 || var < 0.0)
		return 0.0

	return dexp(mean, lambda_0, log=false)*dexp(var, lambda_0, log=false)
}

function likelihood(mean, var){
	if(mean < 0.0 || var < 0.0)
		return 0.0

	rate = mean / var
	shape = mean * rate

	l = 1.0
	for(i in 1:num_arrows){
		l *= dgamma(arrows[i], shape, rate, log=false)
	}
	return l
}

lambda_0 = 1.0

mean = rexp(1, lambda_0)[1]
var = rexp(1, lambda_0)[1]


write("iteration","mean","var","\n",file="output/archery_MH_gamma.log")
write(0,mean,var,"\n",file="output/archery_MH_gamma.log",append=TRUE)

print("iteration","mean","var")
print(0,mean, var)

delta = 0.1
reps = 10000
printgen = 10

for(rep in 1:reps){

	mean_prime = mean + runif(n=1, -delta, delta)[1]

	R = (likelihood(mean_prime, var)/likelihood(mean,var)) * (prior(mean_prime,var)/prior(mean,var)) 
	
	u = runif(1,0,1)[1] 
	if(u < R){
		# accept proposal
		mean = mean_prime 
	}


	var_prime = var + runif(n=1, -delta, delta)[1]

	R = (likelihood(mean,var_prime)/likelihood(mean,var)) * (prior(mean,var_prime)/prior(mean,var)) 
	
	u = runif(1,0,1)[1] 
	if(u < R){
		# accept proposal
		var = var_prime 
	}

	if ( (rep % printgen) == 0 ) {
		write(rep,mean,var,"\n",file="output/archery_MH_gamma.log",append=TRUE)
		print(rep,mean, var)
	}
} 



q()

