##################################################
# Basic MCMC tutorial using archery example      #
#    Wade Dismukes, Tracy Heath, and Walker Pett #
##################################################


# Simulate some data (i.e. shoot some arrows)
# First we need some mean distance
mean_true = 1
# Then we need the number of arrows shot
num_arrows = 6

# Simulate the sum of the arrow distances
arrow_sum = rgamma(1, num_arrows, 1/mean_true)[1]

# Define the prior function on the mean 
function prior(mean){
	if(mean < 0.0)
		return 0.0

	return dexp(mean, prior_mean, log=false)
}

# Define the likelihood function on the mean 
function likelihood(mean){
	if(mean < 0.0)
		return 0.0

	return dgamma(arrow_sum, num_arrows, 1/mean, log=false)
}

# Initialize the chain with some starting value
prior_mean = 1.0
mean = rexp(1, 1/prior_mean)[1]

# Prepare a file to log our samples
write("iteration","mean","\n",file="output/archery_MH_exp.log")
write(0,mean,"\n",file="output/archery_MH_exp.log",append=TRUE)

# Print the initial values to the screen 
print("iteration","mean")
print(0,mean)

# Write the MH algorithm
delta = 1
reps = 10000
printgen = 10

for(rep in 1:reps){
	# Propose a new value of mean
	mean_prime = mean + runif(n=1, -delta, delta)[1]

	# Compute the acceptance probability
	R = (likelihood(mean_prime)/likelihood(mean)) * (prior(mean_prime)/prior(mean)) 
	
	# Accept or reject the proposal
	u = runif(1,0,1)[1] 
	if(u < R){
		# Accept the proposal
		mean = mean_prime 
	}

	if ( (rep % printgen) == 0 ) {
		# Write the samples to a file
		write(rep,mean,"\n",file="output/archery_MH_exp.log",append=TRUE)
		# Print the samples to the screen
		print(rep,mean)
	}
} 



q()

