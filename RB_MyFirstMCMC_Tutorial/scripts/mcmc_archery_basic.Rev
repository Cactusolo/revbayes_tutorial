##################################################
# Basic MCMC tutorial using archery example      #
#    Wade Dismukes, Tracy Heath, and Walker Pett #
##################################################



# Simulate some data (i.e. shoot some arrows)
# First we need some prior on our mean and variance
num_arrows = 6 # number of arrows shot
# true posterior mean on how far the arrows will land from the target
true_mu = 0.0
# true posterior variance 
true_sd = 1
# set min and max
minimum = 0
maximum = 300
# simulate some data
arrows = rnormal(n = num_arrows, mean = true_mu, sd = true_sd, min = minimum, max = maximum)

# define the prior function on the mean 
function Natural logPriorMean(mu_prime, mu_zero, sd_zero, mini, maxi){
	prior_mean = dnormal(mu_prime, mu_zero, sd_zero, min = mini, max = maxi, log=true)
	return prior_mean
}

function Natural logLikelihood(mu_prime, sd_zero, mini, maxi){
	likelihood_mean = 0.0
	for(i in 1:num_arrows){
		likelihood_mean += dnormal(arrows[i], mu_prime, sd_zero, min = mini, max = maxi, log=true)
	}
	return likelihood_mean
}

prior_mu = 0.5
stdev = 1

mu = rnorm(1, prior_mu, sd = stdev, min = minimum, max = maximum)[1]


write("iteration","mu","\n",file="output/archery_MH.log")
write(0,mu,"\n",file="output/archery_MH.log",append=TRUE)

delta = 0.1
reps = 10000

for(rep in 1:reps){

	mu_prime = mu + runif(n=1, -delta, delta)[1] 

	R = (logLikelihood(mu_prime, stdev, minimum, maximum) - logLikelihood(mu, stdev, minimum, maximum)) +
		 ( logPriorMean(mu_prime, prior_mu, stdev, min = minimum, max = maximum) - logPriorMean(mu, prior_mu, stdev, min = minimum, max = maximum)) 
	u = runif(1,0,1)[1] 
	if(ln(u) < R){
		# accept proposal
		mu = mu_prime 
	} 

	write(rep,mu, "\n", file="output/archery_MH.log", append=TRUE) 
} 



q()

