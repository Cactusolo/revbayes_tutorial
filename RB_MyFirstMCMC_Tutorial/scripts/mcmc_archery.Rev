#####################################################################
#    MCMC archery example tutorial using Rev moves and monitors     #
#          Wade Dismukes, Walker Pett, and Tracy Heath              #
#####################################################################


# Simulate some data (i.e. shoot some arrows)
# First we need some set value for our mean and variance
num_arrows = 6 # number of arrows shot
# set a known mean on how far the arrows will land from the target
true_mu = 0.0
# set a known variance (we are going to estimate this)
true_sd = 1
# simulate some data
arrows = rnormal(num_arrows, true_mu, true_sd, min = 0.0, max = 300)



# specify a prior on our precision 
a <- 1
b <- 1
# precision follows a gamma distribution, 
# this is a random variable so it is a stochastic node
precision ~ dnGamma(a,b) 

# transform our precision into sd using a deterministic node,
# takes sqrt and the inverse of the precision
sd := sqrt(1 / precision)

moves[1] = mvSlide(precision, delta = 0.1, tune = false, weight = 2.0)


prior_mean <- 10
# prior on the mean
mu ~ dnNormal(prior_mean, sd, min = 0, max = 300)

# define moves on our parameters
moves[2] = mvSlide(mu, delta = 0.1, tune = false, weight = 2.0)


# specify our data model (i.e. the likelihood)
for(i in 1:num_arrows){
	shot[i] ~ dnNormal(mu, sd, min = 0, max = 300)
	shot[i].clamp(arrows[i])
}

# construct our model graph
my_model = model(a)


# make some monitors to keep track of the MCMC
monitors[1] = mnModel(filename = "output/archery_MCMC.log", 
						printgen = 10, 
						separator = TAB)

monitors[2] = mnScreen(printgen = 1000, sd)

# make mcmc object
mymcmc = mcmc(my_model, monitors, moves)

# run our mcmc
# mymcmc.burnin(generations = 10000, tuningInterval = 100)
mymcmc.run(100000, tuningInterval = 0)

# how well did our move perform
mymcmc.operatorSummary()

