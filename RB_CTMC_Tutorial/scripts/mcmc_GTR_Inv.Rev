################################################################################
#
# RevBayes Example: Bayesian inference using MCMC and output analysis
# 
# This file: Specifies the full model parameters and moves for a GTR+Gamma+Inv
#			substitution model on a single gene.
#
# authors: Sebastian Hoehna, Michael Landis, and Tracy A. Heath
#
################################################################################


### Read in sequence data for both genes
data = readDiscreteCharacterData("analysis_files/data/primates_cytb.nex")

# Get some useful variables from the data. We need these later on.
n_species <- data.ntaxa()
n_branches <- 2 * n_species - 3
taxa <- data.taxa()


mvi = 0 
mni = 0


######################
# Substitution Model #
######################

# specify the stationary frequency parameters
pi_prior <- v(1,1,1,1) 
pi ~ dnDirichlet(pi_prior)
moves[++mvi] = mvBetaSimplex(pi, alpha=10.0, tune=true, weight=2.0)
moves[++mvi] = mvDirichletSimplex(pi, alpha=10.0, tune=true, weight=2.0)


# specify the exchangeability rate parameters
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
moves[++mvi] = mvBetaSimplex(er, alpha=10.0, tune=true, weight=3.0)
moves[++mvi] = mvDirichletSimplex(er, alpha=10.0, tune=true, weight=3.0)


# create a deterministic variable for the rate matrix
Q := fnGTR(er,pi) 


#############################
# Among Site Rate Variation #
#############################


# the probability of a site being invariable
p_inv ~ dnBeta(1,1)
moves[++mvi] = mvScale(p_inv, lambda=0.1, tune=true, weight=2.0)
moves[++mvi] = mvSlide(p_inv, delta=0.1, tune=true, weight=2.0)
#moves[++mvi] = mvBetaProbability(p_inv, delta=1.0, tune=true, weight=2.0)


##############
# Tree model #
##############

out_group = clade("Galeopterus_variegatus")
# Prior distribution on the tree topology	
topology ~ dnUniformTopology(taxa, outgroup=out_group)
moves[++mvi] = mvNNI(topology, weight=5.0)
moves[++mvi] = mvSPR(topology, weight=1.0)

# Branch length prior
for (i in 1:n_branches) {
    bl[i] ~ dnExponential(10.0)
	moves[++mvi] = mvScale(bl[i])
}

TL := sum(bl)
	
psi := treeAssembly(topology, bl)




###################
# PhyloCTMC Model #
###################

# the sequence evolution model
seq ~ dnPhyloCTMC(tree=psi, Q=Q, pInv=p_inv, type="DNA")

# attach the data
seq.clamp(data)


############
# Analysis #
############

mymodel = model(psi)

# add monitors
monitors[++mni] = mnScreen(p_inv, TL, printgen=1000)
monitors[++mni] = mnFile(psi, filename="output/primates_cytb.invar.trees", printgen=10)
monitors[++mni] = mnModel(filename="output/primates_cytb.invar.log",printgen=10)

# run the analysis
mymcmc = mcmc(mymodel, moves, monitors, nruns=2)
#mymcmc.burnin(10000,200)
mymcmc.run(30000)



# you may want to quit RevBayes now
q()

